- 23 feb, Tried to implmented FLEASE. But there is an issue, at the moment commit phase (where we actually write to the
CRDTs are only being exectued once). Spent all day trying to make it work, but not fully there yet.

For push 16:22 (Sunday) (Git message: Removed renewal)
    1. I removed so that is not possible to renew the lease, the have to wait for the lease to be free.
    The problem is otherwise the the leaseholder will continously renew their lease before it runs out.
    This works ok because processors are constanty asking for the lease atm
    2. I also changed from Clock.systemDefaultZone().millis() to java.time.Instant.now().toEpochMilli() because the latter focuses only on the timeline
    and therefore should be better for our need.
    3. I also changed the ordering of calling on ctx.self ! ConsumeOperation
    4. Furthermore I added a boolean to track if a node where expecting more acks/nacks, because previoulsy that caused issues for me. No once they have taking a decision
    they wont be affected by late replys, these will be discarded.
    5. Lastly I played around with setting the lease times, still not sure about what is good here

    Result: Seems to work, but the amount of writes to the CRDTs are really random. Sometimes the have enough time to write only two values
    and other times the write more than 10...

    Issue: The Ki goes up to 12499, which is neccesserarly not a problem but im to figure out if it would be a problem

For push 20:26 (Friday) (Git message: Added tests)
    1. I added tests for the CRDTs, they are not complete but they are a start. Transactions seems to be fully working.
    2. Most importantly I did a new implementation of the locks, much easier one, but prone for deadlocks. Can probably be fairly easy solved
        by adding a timeout for the locks. Furthermore I haven't added anything to do with Crash-Recorvery yet, that is to come.